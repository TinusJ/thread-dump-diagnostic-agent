services:
  # REST API Service - Primary service for REST endpoints
  thread-dump-rest:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thread-dump-rest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xmx512m -Xms256m
    volumes:
      # Mount docker socket to allow thread dump generation from host processes
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Optional: mount for thread dump files
      - ./dumps:/app/dumps:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - thread-dump-network

  # MCP Service - Specialized service for MCP endpoints  
  thread-dump-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thread-dump-mcp
    ports:
      - "8081:8081"
      - "8082:8082"  # Management port
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mcp
      - JAVA_OPTS=-Xmx256m -Xms128m
      - SERVER_PORT=8081
      - SERVER_SERVLET_CONTEXT_PATH=/mcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./dumps:/app/dumps:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/mcp/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - thread-dump-network
    depends_on:
      - thread-dump-rest

  # Optional: Nginx reverse proxy for load balancing
  nginx:
    image: nginx:alpine
    container_name: thread-dump-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - thread-dump-rest
      - thread-dump-mcp
    restart: unless-stopped
    networks:
      - thread-dump-network
    profiles:
      - with-proxy

networks:
  thread-dump-network:
    driver: bridge
    
volumes:
  dumps:
    driver: local